#!/usr/bin/env node

/**
 * üîë WINDVENTURE STRIPE SETUP ASSISTANT
 * Script interactif pour configurer les cl√©s Stripe
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function askQuestion(question) {
  return new Promise((resolve) => {
    rl.question(question, (answer) => {
      resolve(answer.trim());
    });
  });
}

async function setupStripe() {
  console.log('\nüöÄ WINDVENTURE STRIPE CONFIGURATION ASSISTANT');
  console.log('='.repeat(60));
  console.log('Ce script va vous aider √† configurer vos cl√©s Stripe.\n');

  // Check if .env.local already exists
  const envPath = path.join(process.cwd(), '.env.local');
  const envExists = fs.existsSync(envPath);
  
  if (envExists) {
    const overwrite = await askQuestion('‚ö†Ô∏è  .env.local existe d√©j√†. Voulez-vous le remplacer? (y/n): ');
    if (overwrite.toLowerCase() !== 'y') {
      console.log('‚ùå Configuration annul√©e.');
      rl.close();
      return;
    }
  }

  console.log('\nüìã √âTAPE 1: TYPE D\'ENVIRONNEMENT');
  console.log('1. Development (cl√©s test)');  
  console.log('2. Production (cl√©s live)');
  const envType = await askQuestion('Choisissez votre environnement (1 ou 2): ');
  
  const isProduction = envType === '2';
  const keyPrefix = isProduction ? 'live' : 'test';
  
  console.log(`\nüîë √âTAPE 2: CL√âS STRIPE ${keyPrefix.toUpperCase()}`);
  console.log(`R√©cup√©rez vos cl√©s depuis: https://dashboard.stripe.com/apikeys`);
  
  const publishableKey = await askQuestion(`Publishable Key (pk_${keyPrefix}_...): `);
  if (!publishableKey.startsWith(`pk_${keyPrefix}_`)) {
    console.log(`‚ùå Erreur: La cl√© doit commencer par pk_${keyPrefix}_`);
    rl.close();
    return;
  }
  
  const secretKey = await askQuestion(`Secret Key (sk_${keyPrefix}_...): `);
  if (!secretKey.startsWith(`sk_${keyPrefix}_`)) {
    console.log(`‚ùå Erreur: La cl√© doit commencer par sk_${keyPrefix}_`);
    rl.close();
    return;
  }

  console.log('\nüîó √âTAPE 3: WEBHOOK SECRET');
  console.log('Cr√©ez un webhook sur: https://dashboard.stripe.com/webhooks');
  console.log('URL: https://windventure-premium.vercel.app/api/stripe-webhook');
  
  const webhookSecret = await askQuestion('Webhook Signing Secret (whsec_...): ');
  if (!webhookSecret.startsWith('whsec_')) {
    console.log('‚ùå Erreur: Le secret doit commencer par whsec_');
    rl.close();
    return;
  }

  console.log('\nüåê √âTAPE 4: URL DE BASE');
  const defaultUrl = isProduction ? 'https://windventure-premium.vercel.app' : 'http://localhost:3000';
  const baseUrl = await askQuestion(`Base URL (d√©faut: ${defaultUrl}): `) || defaultUrl;

  // Generate .env.local content
  const envContent = `# üîê WINDVENTURE STRIPE CONFIGURATION
# Generated by setup-stripe.js on ${new Date().toISOString()}

# üåê BASE URL
NEXT_PUBLIC_BASE_URL=${baseUrl}

# üí≥ STRIPE CONFIGURATION (${keyPrefix.toUpperCase()} KEYS)
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${publishableKey}
STRIPE_SECRET_KEY=${secretKey}
STRIPE_WEBHOOK_SECRET=${webhookSecret}

# üè∑Ô∏è STRIPE PRODUCT IDS (pr√©-configur√©s)
STRIPE_BEGINNER_PRIVATE_PRICE=price_1Reo9xHUqGxCezEFwTKoXkzJ
STRIPE_BEGINNER_SEMI_PRIVATE_PRICE=price_1Reo8SHUqGxCezEF3ca4QL34
STRIPE_EXPLORATION_PRICE=price_1ReoC9HUqGxCezEFSDRUrGTz
STRIPE_COMBINED_PRICE=price_1ReoApHUqGxCezEFCuWVKKGB

# üìß EMAIL CONFIGURATION (optionnel)
# RESEND_API_KEY=your_resend_key_here
# FROM_EMAIL=booking@windventure.fr
# ADMIN_EMAIL=hamzaseidou582@gmail.com

# üöÄ ENVIRONMENT
NODE_ENV=${isProduction ? 'production' : 'development'}

# ‚ö†Ô∏è S√âCURIT√â
# Ne jamais committer ce fichier dans Git
# Garder ces cl√©s secr√®tes et s√©curis√©es
`;

  // Write .env.local file
  fs.writeFileSync(envPath, envContent);

  console.log('\n‚úÖ CONFIGURATION TERMIN√âE!');
  console.log('='.repeat(40));
  console.log(`üìÅ Fichier cr√©√©: .env.local`);
  console.log(`üîë Type de cl√©s: ${keyPrefix.toUpperCase()}`);
  console.log(`üåê URL de base: ${baseUrl}`);
  
  console.log('\nüìã PROCHAINES √âTAPES:');
  console.log('1. ‚úÖ Configuration locale termin√©e');
  console.log('2. üöÄ D√©marrer: npm run dev');
  console.log('3. üß™ Tester: http://localhost:3000/book?package=combined');
  
  if (isProduction) {
    console.log('4. ‚òÅÔ∏è  Configurer variables Vercel:');
    console.log('   vercel env add NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY');
    console.log('   vercel env add STRIPE_SECRET_KEY');
    console.log('   vercel env add STRIPE_WEBHOOK_SECRET');
    console.log('5. üöÄ D√©ployer: vercel --prod');
  }

  console.log('\nüéâ WINDVENTURE STRIPE EST MAINTENANT CONFIGUR√â!');
  rl.close();
}

// Run the setup
setupStripe().catch(console.error);