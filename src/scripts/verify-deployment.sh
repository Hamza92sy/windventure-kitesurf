#!/bin/bash

# üöÄ Windventure Deployment Verification Script
# V√©rifie que les composants critiques sont en production

set -e

echo "üîç V√©rification du d√©ploiement Windventure..."
echo "=============================================="

# Configuration
SITE_URL=${SITE_URL:-"https://windventure.fr"}
PREVIEW_URL=${PREVIEW_URL:-"https://windventure-git-main.vercel.app"}

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction de v√©rification
check_component() {
    local url=$1
    local component=$2
    local selector=$3

    echo -n "üîç V√©rification de $component... "

    if curl -s "$url" | grep -q "$selector"; then
        echo -e "${GREEN}‚úÖ OK${NC}"
        return 0
    else
        echo -e "${RED}‚ùå MANQUANT${NC}"
        return 1
    fi
}

# Fonction de v√©rification d'image
check_image() {
    local url=$1
    local image_path=$2
    local image_name=$3

    echo -n "üñºÔ∏è  V√©rification de $image_name... "

    if curl -s -I "$url$image_path" | grep -q "200 OK"; then
        echo -e "${GREEN}‚úÖ OK${NC}"
        return 0
    else
        echo -e "${RED}‚ùå MANQUANT${NC}"
        return 1
    fi
}

# Fonction de v√©rification de favicon
check_favicon() {
    local url=$1

    echo -n "üéØ V√©rification du favicon... "

    if curl -s -I "$url/favicon.ico" | grep -q "200 OK"; then
        echo -e "${GREEN}‚úÖ OK${NC}"
        return 0
    else
        echo -e "${RED}‚ùå MANQUANT${NC}"
        return 1
    fi
}

# Fonction de v√©rification de performance
check_performance() {
    local url=$1

    echo -n "‚ö° V√©rification des performances... "

    # V√©rification basique du temps de r√©ponse
    response_time=$(curl -s -w "%{time_total}" -o /dev/null "$url")

    if (( $(echo "$response_time < 3.0" | bc -l) )); then
        echo -e "${GREEN}‚úÖ OK (${response_time}s)${NC}"
        return 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è  LENT (${response_time}s)${NC}"
        return 1
    fi
}

# V√©rifications principales
echo -e "\n${BLUE}üìä V√âRIFICATIONS COMPOSANTS CRITIQUES${NC}"
echo "----------------------------------------"

errors=0

# V√©rification de la homepage
echo -e "\n${YELLOW}üè† HOMEPAGE${NC}"
check_component "$SITE_URL" "HeroDakhla" "HeroDakhla" || ((errors++))
check_component "$SITE_URL" "NavigationSimple" "NavigationSimple" || ((errors++))
check_component "$SITE_URL" "DakhlaGallery" "DakhlaGallery" || ((errors++))
check_component "$SITE_URL" "FooterMinimal" "FooterMinimal" || ((errors++))

# V√©rification des images Dakhla
echo -e "\n${YELLOW}üñºÔ∏è  IMAGES DAKHLA${NC}"
check_image "$SITE_URL" "/images/dakhla/dakhla-lagoon-1.jpg" "Dakhla Lagoon 1" || ((errors++))
check_image "$SITE_URL" "/images/dakhla/dakhla-lagoon-2.jpg" "Dakhla Lagoon 2" || ((errors++))
check_image "$SITE_URL" "/images/dakhla/white-dune-1.jpg" "White Dune 1" || ((errors++))
check_image "$SITE_URL" "/images/dakhla/white-dune-2.jpg" "White Dune 2" || ((errors++))

# V√©rification du favicon
echo -e "\n${YELLOW}üéØ FAVICON${NC}"
check_favicon "$SITE_URL" || ((errors++))

# V√©rification des pages critiques
echo -e "\n${YELLOW}üìÑ PAGES CRITIQUES${NC}"
check_component "$SITE_URL/packages" "Packages" "Choose Your Adventure" || ((errors++))
check_component "$SITE_URL/book" "Booking" "Book Your Adventure" || ((errors++))

# V√©rification des performances
echo -e "\n${YELLOW}‚ö° PERFORMANCES${NC}"
check_performance "$SITE_URL" || ((errors++))

# V√©rification des APIs
echo -e "\n${YELLOW}üîå APIS${NC}"
echo -n "üîç V√©rification API Supabase... "
if curl -s -I "$SITE_URL/api/create-booking" | grep -q "405 Method Not Allowed"; then
    echo -e "${GREEN}‚úÖ OK${NC}"
else
    echo -e "${RED}‚ùå ERREUR${NC}"
    ((errors++))
fi

echo -n "üîç V√©rification API Stripe... "
if curl -s -I "$SITE_URL/api/create-checkout-session" | grep -q "405 Method Not Allowed"; then
    echo -e "${GREEN}‚úÖ OK${NC}"
else
    echo -e "${RED}‚ùå ERREUR${NC}"
    ((errors++))
fi

# R√©sum√©
echo -e "\n${BLUE}üìä R√âSUM√â DE LA V√âRIFICATION${NC}"
echo "================================="

if [ $errors -eq 0 ]; then
    echo -e "${GREEN}üéâ TOUTES LES V√âRIFICATIONS SONT PASS√âES !${NC}"
    echo -e "${GREEN}‚úÖ D√©ploiement r√©ussi${NC}"
    exit 0
else
    echo -e "${RED}‚ùå $errors ERREUR(S) D√âTECT√âE(S)${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è  V√©rifiez les composants manquants${NC}"
    exit 1
fi
