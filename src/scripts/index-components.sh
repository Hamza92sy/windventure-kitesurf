#!/bin/bash

# index-components.sh
# Automatically generates a clean, sorted index.ts for all components.

# --- Configuration ---
COMPONENTS_DIR="src/components"
INDEX_FILE="src/components/index.ts"
TIMESTAMP=$(date +"%Y%m%d%H%M%S")
LOG_FILE="logs/indexer-$TIMESTAMP.log"

# --- ANSI Color Codes ---
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# --- Setup ---
setup() {
    mkdir -p "$(dirname "$LOG_FILE")"
    # Clear previous index file
    > "$INDEX_FILE"
}

# --- Header for the Index File ---
write_header() {
    echo "// --- Auto-generated by index-components.sh ---" >> "$INDEX_FILE"
    echo "// All components are exported from this file for easy importing."
    echo "// Generated at: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> "$INDEX_FILE"
    echo "// -------------------------------------------------" >> "$INDEX_FILE"
    echo "" >> "$INDEX_FILE"
}

# --- Main Logic ---
generate_index() {
    echo -e "${GREEN}âž¤ Generating component index...${NC}"
    log "INFO: Starting component indexing."

    # Find all .tsx files, get their basenames without the extension,
    # sort them alphabetically, and create export statements.
    find "$COMPONENTS_DIR" -type f -name "*.tsx" -exec basename {} .tsx \; \
    | sort \
    | while read -r component_name; do
        # Avoid indexing the index file itself if it exists in the same directory
        if [ "$component_name" != "index" ]; then
            echo "export * from './$component_name';" >> "$INDEX_FILE"
            log "SUCCESS: Indexed $component_name."
        fi
    done
}

# Log messages with timestamp
log() {
    echo "[$TIMESTAMP] $1" >> "$LOG_FILE"
}

# --- Execution ---
main() {
    echo -e "${GREEN}ðŸš€ Starting Component Indexer...${NC}"
    setup
    write_header
    generate_index
    echo -e "\n${GREEN}âœ… Index file generated successfully at: ${YELLOW}$INDEX_FILE${NC}"
    echo -e "Detailed logs available at: ${YELLOW}$LOG_FILE${NC}"
}

# --- Run ---
main
